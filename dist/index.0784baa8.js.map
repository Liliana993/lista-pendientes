{"mappings":"AEAA,MAAM,EAAQ,CACV,KAAM,CACJ,KAAM,EAAE,AACV,EACA,UAAW,EAAE,CACb,WACE,OAAO,IAAI,CAAC,IAAI,AAClB,EACA,SAAS,CAAQ,EAGd,IAAI,IAAM,KADV,IAAI,CAAC,IAAI,CAAG,EACI,IAAI,CAAC,SAAS,EAC7B,IAED,QAAQ,GAAG,CAAC,6BAA8B,IAAI,CAAC,IAAI,CACtD,EACA,UAAU,CAAsB,EAE7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EACvB,EACA,QAAQ,CAAW,EAEjB,IAAM,EAAe,IAAI,CAAC,QAAQ,GAClC,EAAa,IAAI,CAAC,IAAI,CAAC,GAEvB,IAAI,CAAC,QAAQ,CAAC,EAChB,CACF,CCzBF,OAAM,UAAmB,YAGrB,aAAa,CACT,KAAK,GAHT,IAAA,CAAA,MAAA,CAAS,IAAI,CAAC,YAAY,CAAC,CAAC,KAAM,MAAM,GAIpC,IAAI,CAAC,MAAM,EACf,CACA,mBAAmB,CACf,IAAM,EAAM,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,SACtC,GAAK,iBAAiB,SAAU,AAAC,IACjC,EAAE,cAAc,GAChB,IAAM,EAAI,EAAE,MAAM,CAClB,AAAA,EAAM,OAAO,CAAC,EAAE,IAAI,CAAC,KAAK,CAC9B,EACA,CACA,QAAQ,CACJ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAG;AAAxB;A;A;A;A;A,QAMA,CAAC,CAED,IAAM,EAAQ,SAAS,aAAa,CAAC,QACrC,CAAA,EAAM,SAAS,CAAG;AAAlB;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A,QA+FA,CAAC,CACD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAC5B,CAEJ,CACA,eAAe,MAAM,CAAC,UAAW,EC7HjC,OAAM,UAAc,YAGhB,aAAa,CACT,KAAK,GAHT,IAAA,CAAA,MAAA,CAAS,IAAI,CAAC,YAAY,CAAC,CAAC,KAAM,MAAM,GAIpC,IAAI,CAAC,MAAM,EACf,CACA,mBAAmB,CAClB,AAAA,EAAM,SAAS,CAAC,KACb,IAAI,CAAC,MAAM,EACd,EACD,CACA,QAAQ,CACJ,IAAM,EAAO,AAAA,EAAM,QAAQ,GAAG,IAAI,CAClC,QAAQ,GAAG,CAAC,GAEZ,IAAI,CAAC,MAAM,CAAC,SAAS,CAAG;AAAxB;A,aAEK,EAAE,EAAK,GAAG,CAAC,AAAC,GAAiB,CAAC,IAAI,EAAE,EAAK,6BAA6B,CAAC,EACxE,IAAI,CAAC;AAAR;A;A,QAGD,CAAC,CAED,IAAM,EAAQ,SAAS,aAAa,CAAC,QACrC,CAAA,EAAM,SAAS,CAAG;AAAlB;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A;A,QAwBA,CAAC,CACD,IAAI,CAAC,MAAM,CAAC,WAAW,CAAC,EAC5B,CAEJ,CACA,eAAe,MAAM,CAAC,SAAU,GHnDhC,AAAA,EAAM,SAAS,CAAC,WACZ,aAAa,OAAO,CAAC,cAAe,KAAK,SAAS,CAAC,AAAA,EAAM,QAAQ,IACrE","sources":["<anon>","src/index.ts","src/components/state.ts","src/components/form.ts","src/components/list.ts"],"sourcesContent":["const $9f1ef74e1ee3c4be$export$ca000e230c0caa3e = {\n    data: {\n        list: []\n    },\n    listeners: [],\n    getState () {\n        return this.data;\n    },\n    setState (newState) {\n        // modifica this.data (el state) e invoca los callbacks\n        this.data = newState;\n        for (const cb of this.listeners)cb();\n        console.log(\"Soy es state y ha cambiado\", this.data);\n    },\n    subscribe (callback) {\n        // recibe callbacks para ser avisados posteriormente\n        this.listeners.push(callback);\n    },\n    addItem (item) {\n        // suma el nuevo item a la lista\n        const currentState = this.getState();\n        currentState.list.push(item);\n        //guardamos en el state\n        this.setState(currentState);\n    }\n};\n\n\n\nclass $6f3dda1ee2183828$var$Formulario extends HTMLElement {\n    constructor(){\n        super();\n        this.shadow = this.attachShadow({\n            mode: \"open\"\n        });\n        this.render();\n    }\n    connectedCallback() {\n        const btn = this.shadow.querySelector(\".form\");\n        btn?.addEventListener(\"submit\", (e)=>{\n            e.preventDefault();\n            const f = e.target;\n            (0, $9f1ef74e1ee3c4be$export$ca000e230c0caa3e).addItem(f.text.value);\n        });\n    }\n    render() {\n        this.shadow.innerHTML = `\r\n         <h1>Lista de pendientes</h1>\r\n        <form class=\"form\">\r\n        <input class=\"input\" name=\"text\" />\r\n        <button>Agregar</button>\r\n        </form>\r\n        `;\n        const style = document.createElement(\"style\");\n        style.innerHTML = `\r\n        h1{\r\n        text-align: center;\r\n        font-weight: 900;\r\n        font-size: 45px;\r\n        text-decoration: underline;\r\n        color: #020887;\r\n        }\r\n\r\n        .form{\r\n        display: flex;\r\n        margin: auto;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        width: 400px;\r\n        }\r\n        .input {\r\n        border: none;\r\n        outline: none;\r\n        border-radius: 15px;\r\n        padding: 1em;\r\n        background-color: #ccc;\r\n        box-shadow: inset 2px 5px 10px rgba(0,0,0,0.3);\r\n        transition: 300ms ease-in-out;\r\n        margin-bottom: 20px;\r\n          }\r\n\r\n        .input:focus {\r\n         background-color: white;\r\n         transform: scale(1.05);\r\n        box-shadow: 13px 13px 100px #969696,\r\n             -13px -13px 100px #ffffff;\r\n         }\r\n             button{\r\n             background-color: #16899D;\r\n             appearance: button;\r\n             border: solid transparent;\r\n border-radius: 16px;\r\n border-width: 0 0 4px;\r\n box-sizing: border-box;\r\n color: #FFFFFF;\r\n cursor: pointer;\r\n display: inline-block;\r\n font-size: 15px;\r\n font-weight: 700;\r\n letter-spacing: .8px;\r\n line-height: 20px;\r\n margin: 0;\r\n outline: none;\r\n overflow: visible;\r\n padding: 13px 19px;\r\n text-align: center;\r\n text-transform: uppercase;\r\n touch-action: manipulation;\r\n transform: translateZ(0);\r\n transition: filter .2s;\r\n user-select: none;\r\n -webkit-user-select: none;\r\n vertical-align: middle;\r\n white-space: nowrap\r\n             }\r\n button:after {\r\n background-clip: padding-box;\r\n background-color: #1CB0F6;\r\n border: solid transparent;\r\n border-radius: 16px;\r\n border-width: 0 0 4px;\r\n bottom: -4px;\r\n content: \"\";\r\n left: 0;\r\n position: absolute;\r\n right: 0;\r\n top: 0;\r\n z-index: -1;\r\n}\r\n\r\nbutton:main, button:focus {\r\n user-select: auto;\r\n}\r\n\r\nbutton:hover:not(:disabled) {\r\n filter: brightness(1.1);\r\n}\r\n\r\nbutton:disabled {\r\n cursor: auto;\r\n}\r\n\r\nbutton:active:after {\r\n border-width: 0 0 0px;\r\n}\r\n\r\nbutton:active {\r\n padding-bottom: 10px;\r\n}\r\n        `;\n        this.shadow.appendChild(style);\n    }\n}\ncustomElements.define(\"form-el\", $6f3dda1ee2183828$var$Formulario);\n\n\n\nclass $b36d20508a4049b4$var$Lista extends HTMLElement {\n    constructor(){\n        super();\n        this.shadow = this.attachShadow({\n            mode: \"open\"\n        });\n        this.render();\n    }\n    connectedCallback() {\n        (0, $9f1ef74e1ee3c4be$export$ca000e230c0caa3e).subscribe(()=>{\n            this.render();\n        });\n    }\n    render() {\n        const list = (0, $9f1ef74e1ee3c4be$export$ca000e230c0caa3e).getState().list;\n        console.log(list);\n        this.shadow.innerHTML = `\r\n         <div class=\"lista\">\r\n         <ul>${list.map((item)=>{\n            return `<li>${item}<input type=\"checkbox\"/></li>`;\n        }).join(\" \")}\r\n         </ul>\r\n         </div>\r\n        `;\n        const style = document.createElement(\"style\");\n        style.innerHTML = `\r\n        .lista{\r\n        display: flex;\r\n        margin: auto;\r\n        width: 400px;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border: none;\r\n        margin-top: 50px;\r\n        border-radius: 20px;\r\n        background-color: #F7FFF7;\r\n        }\r\n        ul{\r\n        list-style: none;\r\n        }\r\n        li{\r\n        line-height: 1.8;\r\n        letter-spacing: 0.1rem;\r\n        word-spacing: 0.5rem;\r\n        }\r\n        input{\r\n        margin-left: 60px;\r\n        }\r\n        `;\n        this.shadow.appendChild(style);\n    }\n}\ncustomElements.define(\"lis-el\", $b36d20508a4049b4$var$Lista);\n\n\n(0, $9f1ef74e1ee3c4be$export$ca000e230c0caa3e).subscribe(function() {\n    localStorage.setItem(\"state-cache\", JSON.stringify((0, $9f1ef74e1ee3c4be$export$ca000e230c0caa3e).getState()));\n});\n\n\n//# sourceMappingURL=index.0784baa8.js.map\n","import { state } from './components/state';\r\n\r\nimport './components/form';\r\nimport './components/list';\r\n\r\nstate.subscribe(function(){\r\n    localStorage.setItem('state-cache', JSON.stringify(state.getState()))\r\n})","const state = {\r\n    data: {\r\n      list: [],\r\n    },\r\n    listeners: [], // los callbacks\r\n    getState() {\r\n      return this.data;\r\n    },\r\n    setState(newState) {\r\n       // modifica this.data (el state) e invoca los callbacks\r\n       this.data = newState;\r\n       for(const cb of this.listeners){\r\n        cb();\r\n       }\r\n       console.log('Soy es state y ha cambiado', this.data);\r\n    },\r\n    subscribe(callback: (any) => any) {\r\n       // recibe callbacks para ser avisados posteriormente\r\n       this.listeners.push(callback);\r\n    },\r\n    addItem(item:string) {\r\n      // suma el nuevo item a la lista\r\n      const currentState = this.getState();\r\n      currentState.list.push(item);\r\n      //guardamos en el state\r\n      this.setState(currentState);\r\n    },\r\n  };\r\n\r\n  export {state};","import { state } from \"./state\";\r\n\r\nclass Formulario extends HTMLElement{\r\n    shadow = this.attachShadow({mode: 'open'});\r\n\r\n    constructor(){\r\n        super();\r\n        this.render();\r\n    }\r\n    connectedCallback(){\r\n        const btn = this.shadow.querySelector('.form');\r\n        btn?.addEventListener('submit', (e)=>{\r\n        e.preventDefault();\r\n        const f = e.target as any;\r\n        state.addItem(f.text.value);\r\n    })\r\n    }\r\n    render(){\r\n        this.shadow.innerHTML = `\r\n         <h1>Lista de pendientes</h1>\r\n        <form class=\"form\">\r\n        <input class=\"input\" name=\"text\" />\r\n        <button>Agregar</button>\r\n        </form>\r\n        `;\r\n\r\n        const style = document.createElement('style');\r\n        style.innerHTML = `\r\n        h1{\r\n        text-align: center;\r\n        font-weight: 900;\r\n        font-size: 45px;\r\n        text-decoration: underline;\r\n        color: #020887;\r\n        }\r\n\r\n        .form{\r\n        display: flex;\r\n        margin: auto;\r\n        flex-direction: column;\r\n        align-items: center;\r\n        width: 400px;\r\n        }\r\n        .input {\r\n        border: none;\r\n        outline: none;\r\n        border-radius: 15px;\r\n        padding: 1em;\r\n        background-color: #ccc;\r\n        box-shadow: inset 2px 5px 10px rgba(0,0,0,0.3);\r\n        transition: 300ms ease-in-out;\r\n        margin-bottom: 20px;\r\n          }\r\n\r\n        .input:focus {\r\n         background-color: white;\r\n         transform: scale(1.05);\r\n        box-shadow: 13px 13px 100px #969696,\r\n             -13px -13px 100px #ffffff;\r\n         }\r\n             button{\r\n             background-color: #16899D;\r\n             appearance: button;\r\n             border: solid transparent;\r\n border-radius: 16px;\r\n border-width: 0 0 4px;\r\n box-sizing: border-box;\r\n color: #FFFFFF;\r\n cursor: pointer;\r\n display: inline-block;\r\n font-size: 15px;\r\n font-weight: 700;\r\n letter-spacing: .8px;\r\n line-height: 20px;\r\n margin: 0;\r\n outline: none;\r\n overflow: visible;\r\n padding: 13px 19px;\r\n text-align: center;\r\n text-transform: uppercase;\r\n touch-action: manipulation;\r\n transform: translateZ(0);\r\n transition: filter .2s;\r\n user-select: none;\r\n -webkit-user-select: none;\r\n vertical-align: middle;\r\n white-space: nowrap\r\n             }\r\n button:after {\r\n background-clip: padding-box;\r\n background-color: #1CB0F6;\r\n border: solid transparent;\r\n border-radius: 16px;\r\n border-width: 0 0 4px;\r\n bottom: -4px;\r\n content: \"\";\r\n left: 0;\r\n position: absolute;\r\n right: 0;\r\n top: 0;\r\n z-index: -1;\r\n}\r\n\r\nbutton:main, button:focus {\r\n user-select: auto;\r\n}\r\n\r\nbutton:hover:not(:disabled) {\r\n filter: brightness(1.1);\r\n}\r\n\r\nbutton:disabled {\r\n cursor: auto;\r\n}\r\n\r\nbutton:active:after {\r\n border-width: 0 0 0px;\r\n}\r\n\r\nbutton:active {\r\n padding-bottom: 10px;\r\n}\r\n        `;\r\n        this.shadow.appendChild(style);\r\n    }\r\n\r\n}\r\ncustomElements.define('form-el', Formulario);","import { state } from \"./state\";\r\n\r\nclass Lista extends HTMLElement{\r\n    shadow = this.attachShadow({mode: 'open'});\r\n\r\n    constructor(){\r\n        super();\r\n        this.render();\r\n    }\r\n    connectedCallback(){\r\n     state.subscribe(()=>{\r\n        this.render();\r\n     })\r\n    }\r\n    render(){\r\n        const list = state.getState().list;\r\n        console.log(list);\r\n        \r\n        this.shadow.innerHTML = `\r\n         <div class=\"lista\">\r\n         <ul>${list.map((item)=>{ return  `<li>${item}<input type=\"checkbox\"/></li>`\r\n         }).join(\" \")}\r\n         </ul>\r\n         </div>\r\n        `;\r\n\r\n        const style = document.createElement('style');\r\n        style.innerHTML = `\r\n        .lista{\r\n        display: flex;\r\n        margin: auto;\r\n        width: 400px;\r\n        flex-direction: column;\r\n        justify-content: center;\r\n        align-items: center;\r\n        border: none;\r\n        margin-top: 50px;\r\n        border-radius: 20px;\r\n        background-color: #F7FFF7;\r\n        }\r\n        ul{\r\n        list-style: none;\r\n        }\r\n        li{\r\n        line-height: 1.8;\r\n        letter-spacing: 0.1rem;\r\n        word-spacing: 0.5rem;\r\n        }\r\n        input{\r\n        margin-left: 60px;\r\n        }\r\n        `;\r\n        this.shadow.appendChild(style);\r\n    }\r\n\r\n}\r\ncustomElements.define('lis-el', Lista);"],"names":["$9f1ef74e1ee3c4be$export$ca000e230c0caa3e","data","list","listeners","getState","setState","newState","cb","console","log","subscribe","callback","push","addItem","item","currentState","$6f3dda1ee2183828$var$Formulario","HTMLElement","constructor","shadow","attachShadow","mode","render","connectedCallback","btn","querySelector","addEventListener","e","preventDefault","f","target","text","value","innerHTML","style","document","createElement","appendChild","customElements","define","$b36d20508a4049b4$var$Lista","map","join","localStorage","setItem","JSON","stringify"],"version":3,"file":"index.0784baa8.js.map"}